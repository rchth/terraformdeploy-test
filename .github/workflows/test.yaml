name: 'LeverageMatrix'

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'

jobs:
  generate-matrix:
    name: 'Generate Matrix'
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Find .tfvars files
        id: find-tfvars
        run: |
          # Find all .tfvars files and generate JSON for the matrix
          tfvars_files=$(find . -name "*.tfvars" -printf '{"tfvars_file":"%p"},')
          tfvars_files="[${tfvars_files%,}]"
          echo "Matrix JSON: $tfvars_files"
          echo "::set-output name=matrix::$tfvars_files"

jobs:
  infradeploy:
    name: 'infradeploy'
    env:
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      TF_BACKEND_ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tfvars_file: ${{fromJson(needs.generate-matrix.outputs.matrix)}} # Add more as needed
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init -upgrade -backend-config="access_key=$TF_BACKEND_ACCESS_KEY"

      - name: Terraform Plan
        run: |
          echo "Running terraform plan for ${{ matrix.tfvars_file }}"
          terraform plan -var-file="${{ matrix.tfvars_file }}" -input=false
    
